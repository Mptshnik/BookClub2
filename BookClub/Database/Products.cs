//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookClub.Database
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;

    public partial class Products
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Products()
        {
            this.OrdersProducts = new HashSet<OrdersProducts>();
        }
    
        public int ID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public string Image { get; set; }
        public int CategoryID { get; set; }
        public decimal Discount { get; set; }
        public Nullable<int> Quantity { get; set; }

        [NotMapped]
        public decimal PriceForQuantutyWithDiscount
        {
            get
            {
                OrdersProducts ordersProducts = OrdersProducts.ToList().Where(x => x.ProductID == ID).FirstOrDefault();

                return ordersProducts.Quantity * PriceWithDiscount;
            }
            set { }
        }

        [NotMapped]
        public decimal PriceForQuantuty
        {
            get
            {
                OrdersProducts ordersProducts = OrdersProducts.ToList().Where(x => x.ProductID == ID).FirstOrDefault();

                return ordersProducts.Quantity * Price;
            }
            set { }
        }

        [NotMapped]
        public int QuantityInOrder
        {
            get
            {
                OrdersProducts ordersProducts = OrdersProducts.ToList().Where(x => x.ProductID == ID).FirstOrDefault();

                return ordersProducts.Quantity;
            }
            set { }
        }
        [NotMapped]
        public decimal PriceWithDiscount
        {
            get
            {
                return Math.Round(Price - Price * Discount, 2);
            }
            set { }
        }
        [NotMapped]
        public string PathToImage
        {
            get
            {
                string path = "/Src/Images/";

                if (string.IsNullOrEmpty(Image))
                {
                    return path + "book.png";
                }
                else
                {
                    return path + Image;
                }
            }
            set { }
        }
        public virtual Categories Categories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrdersProducts> OrdersProducts { get; set; }
    }
}
